server:
  port: ${APP_PORT:8443}
  http:
    port: ${HTTP_PORT:8080}
  ssl:
    key-store: classpath:springboot.p12
    key-store-password: password
    key-store-type: pkcs12
    key-alias: springboot
    key-password: password

spring:
  application:
    name: items_marketplace
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${POSTGRES_DB_URL:jdbc:postgresql://localhost:5432/ItemsMarketplaceDB}
    username: ${POSTGRES_DB_USERNAME:postgres}
    password: ${POSTGRES_DB_PASSWORD:postgres}
  jpa:
    show-sql: false
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  sql:
    init:
      mode: never
      platform: postgresql

logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate.sql: DEBUG
    org.hibernate.type.org.hibernate.type.descriptor.sql.BasicBinder: DEBUG

springdoc:
  swagger-ui:
    path: /docs

frontend:
  url: ${FRONTEND_URL:http://localhost:4200}
  cdn:
    url: ${FRONTEND_CDN_URL:https://itemsmarketplacecdnep.azureedge.net}

jwt:
  secret: ${JWT_SECRET:2D4B614E645267556B58703273357638792F423F4528482B4D6251655368566D}

s3:
  bucket:
    name: ${S3_BUCKET_NAME:items-marketplace-images}

cloudfront:
  domain:
    public: ${CLOUDFRONT_DOMAIN_PUBLIC}
    private: ${CLOUDFRONT_DOMAIN_PRIVATE}
  key_pair_id: ${KEY_PAIR_ID}

private:
  key:
    name: ${PRIVATE_KEY_NAME:items-marketplace-cloudfront-private-key}

stripe:
  secret-key: ${STRIPE_SECRET_KEY}
  endpoint-secret: ${STRIPE_ENDPOINT_SECRET}