services:
  items-marketplace-service:
    image: items-marketplace-service
    container_name: items-marketplace-service
    build:
      context: ./items-marketplace
      dockerfile: Dockerfile
    depends_on:
      postgres-db:
        condition: service_healthy
    restart: on-failure
    ports:
      - "8080:8080"
    environment:
      POSTGRES_DB_USERNAME: ${POSTGRES_DB_USERNAME}
      POSTGRES_DB_PASSWORD: ${POSTGRES_DB_PASSWORD}
      POSTGRES_DB_URL: ${POSTGRES_DB_URL}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
    networks:
      - items-marketplace-network

  postgres-db:
    container_name: postgres-db
    image: postgres:alpine
    user: ${POSTGRES_DB_USERNAME}
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 5s
      timeout: 2s
      retries: 3
    networks:
      - items-marketplace-network

networks:
  items-marketplace-network:
    driver: bridge